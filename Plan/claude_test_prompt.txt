# Έγγραφο Απαιτήσεων Έργου - Εφαρμογή Σχεδιασμού Διαδρομών

## 1. Επισκόπηση Έργου

### 1.1 Όνομα Έργου
Διαδραστική Εφαρμογή Σχεδιασμού Διαδρομών και Υψομετρικού Προφίλ

### 1.2 Σκοπός Έργου
Δημιουργία μιας εφαρμογής μιας σελίδας που επιτρέπει στους χρήστες να σχεδιάζουν διαδρομές σε χάρτη με υψομετρικό προφίλ σε πραγματικό χρόνο, λειτουργώντας εξ ολοκλήρου στον browser χωρίς απαιτήσεις βάσης δεδομένων στο backend.

### 1.3 Βασικά Κριτήρια Επιτυχίας
- Λειτουργικός διαδραστικός χάρτης με τοποθέτηση pins
- Αυτόματη βελτιστοποίηση διαδρομής μεταξύ pins σε πραγματικό χρόνο, μόνο στο οδικό δύκτυο!
- Οπτικοποίηση υψομετρικού προφίλ σε πραγματικό χρόνο
- Καμία εξάρτηση από βάση δεδομένων backend
- Δυνατότητα ζωντανής ανάπτυξης

## 2. Λειτουργικές Απαιτήσεις

### 2.1 Βασικές Λειτουργίες

#### 2.1.1 Διαδραστική Διεπαφή Χάρτη
- **Κύρια Προβολή Χάρτη**: Διαδραστικός χάρτης πλήρους οθόνης χρησιμοποιώντας δεδομένα OpenStreetMap
- **Σύστημα Τοποθέτησης Pins**: 
  - Οι χρήστες μπορούν να κάνουν κλικ οπουδήποτε στον χάρτη για να τοποθετήσουν pins
  - Το πρώτο pin ορίζεται αυτόματα ως σημείο εκκίνησης
  - Τα επόμενα pins δημιουργούν waypoints σε σειρά
  - Οπτική διάκριση μεταξύ σημείου εκκίνησης και waypoints
- **Διαχείριση Pins**:
  - Δυνατότητα αφαίρεσης μεμονωμένων pins
  - Επανατοποθέτηση pins με drag-and-drop
  - Λειτουργία εκκαθάρισης όλων των pins, με μορφιου button 
  - Μέγιστο όριο pins (προτείνεται 10-15 για απόδοση)

#### 2.1.2 Σχεδιασμός & Βελτιστοποίηση Διαδρομής
- **Υπολογισμός Διαδρομής**: Αυτόματος υπολογισμός διαδρομής μεταξύ διαδοχικών pins
- **Μόνο Οδικό Δίκτυο**: Οι διαδρομές πρέπει να ακολουθούν μόνο οδικά δίκτυα (όχι εκτός δρόμου μονοπάτια)
- **Βελτιστοποίηση Διαδρομής**: Εύρεση συντομότερης/ταχύτερης διαδρομής μεταξύ waypoints
- **Οπτική Προβολή Διαδρομής**: Σαφής γραμμή διαδρομής στον χάρτη με διακριτό χρώμα
- **Επανυπολογισμός Διαδρομής**: Αυτόματος επανυπολογισμός όταν μετακινούνται ή προστίθενται/αφαιρούνται pins

#### 2.1.3 Σύστημα Υψομετρικού Προφίλ
- **Προβολή Προφίλ**: Οριζόντιο γράφημα υψομέτρου κάτω από τον χάρτη
- **Ενημερώσεις Πραγματικού Χρόνου**: Το προφίλ ενημερώνεται αυτόματα όταν αλλάζει η διαδρομή
- **Οπτικοποίηση Κλίσης**: 
  - Κανονική γραμμή υψομέτρου σε ένα χρώμα (π.χ., μπλε)
  - Τμήματα με κλίση >5° σε διαφορετικό χρώμα (π.χ., κόκκινο)
- **Διαδραστικές Λειτουργίες**:
  - Hover πάνω από το προφίλ για εμφάνιση θέσης στον χάρτη
  - Κλικ στο προφίλ για κεντράρισμα του χάρτη σε εκείνη την τοποθεσία
- **Λεπτομέρειες Προφίλ**:
  - Δείκτες απόστασης στον άξονα X
  - Τιμές υψομέτρου στον άξονα Y
  - Προβολή συνολικής απόστασης και κέρδους υψομέτρου

### 2.2 Απαιτήσεις Διεπαφής Χρήστη

#### 2.2.1 Δομή Διάταξης
- **Κύρια Περιοχή Χάρτη**: 70% του ύψους οθόνης
- **Υψομετρικό Προφίλ**: 30% του ύψους οθόνης, σταθερό στο κάτω μέρος
- **Πίνακας Ελέγχου**: Πλωτή πλαϊνή μπάρα ή άνω μπάρα με βασικούς ελέγχους
- **Responsive Design**: Πρέπει να λειτουργεί σε desktop και tablet (mobile προαιρετικό)

#### 2.2.2 Χειριστήρια Χρήστη
- **Χειριστήρια Χάρτη**: Zoom in/out, pan, επαναφορά προβολής
- **Χειριστήρια Διαδρομής**: Εκκαθάριση διαδρομής, αποθήκευση δεδομένων διαδρομής, λειτουργία εξαγωγής
- **Επιλογές Προβολής**: Εναλλαγή υψομετρικού προφίλ, εναλλαγή επισήμανσης κλίσης
- **Προβολή Πληροφοριών**: Τρέχουσα συνολική απόσταση, συνολικό κέρδος/απώλεια υψομέτρου

## 3. Τεχνικές Απαιτήσεις

### 3.1 Στοίβα Τεχνολογίας
- **Frontend Framework**: HTML5, CSS3, JavaScript (ή React εάν προτιμάται)
- **Βιβλιοθήκη Χαρτογράφησης**: Leaflet.js ή OpenLayers για ενσωμάτωση OpenStreetMap
- **Βιβλιοθήκη Γραφημάτων**: Chart.js ή D3.js για υψομετρικό προφίλ
- **Ενσωμάτωση API**: OpenStreetMap Nominatim API, OpenRouteService API, ή παρόμοια
- **Χωρίς Backend**: Πλήρως client-side εφαρμογή

### 3.2 Απαιτήσεις API

#### 3.2.1 APIs Χαρτογράφησης
- **Βασικός Χάρτης**: OpenStreetMap tile server
- **Υπηρεσία Δρομολόγησης**: 
  - OpenRouteService (προτείνεται) ή GraphHopper
  - Πρέπει να υποστηρίζει δρομολόγηση μόνο σε δρόμους
  - Πρέπει να επιστρέφει λεπτομερείς συντεταγμένες διαδρομής
- **Υπηρεσία Υψομέτρου**:
  - Open-Elevation API ή παρόμοια
  - Πρέπει να παρέχει δεδομένα υψομέτρου για συντεταγμένες διαδρομής
  - Αποτελεσματικός χειρισμός batch αιτημάτων υψομέτρου

#### 3.2.2 Χειρισμός Δεδομένων
- **Χωρίς Μόνιμη Αποθήκευση**: Όλα τα δεδομένα διαχειρίζονται στη μνήμη του browser
- **Session Storage**: Χρήση browser sessionStorage για προσωρινή διατήρηση δεδομένων
- **Δυνατότητα Εξαγωγής**: Επιτρέπει στους χρήστες να κατεβάσουν δεδομένα διαδρομής ως αρχείο GPX/JSON

### 3.3 Απαιτήσεις Απόδοσης
- **Απόδοση Χάρτη**: Ομαλές αλληλεπιδράσεις χάρτη (>30 FPS)
- **Υπολογισμός Διαδρομής**: Αποτελέσματα εντός 3 δευτερολέπτων για κανονικές διαδρομές
- **Υψομετρικό Προφίλ**: Ενημέρωση εντός 2 δευτερολέπτων από αλλαγή διαδρομής
- **Διαχείριση Μνήμης**: Αποτελεσματικός καθαρισμός παλιών δεδομένων διαδρομής

## 4. Απαιτήσεις Εμπειρίας Χρήστη

### 4.1 Ροή Αλληλεπίδρασης
1. **Αρχική Φόρτωση**: Προβολή κεντραρισμένου χάρτη με σαφείς οδηγίες
2. **Πρώτο Pin**: Ο χρήστης κάνει κλικ στον χάρτη, δημιουργεί σημείο εκκίνησης με οπτική ανατροφοδότηση
3. **Πρόσθετα Pins**: Κάθε κλικ προσθέτει waypoint και υπολογίζει διαδρομή
4. **Προβολή Υψομέτρου**: Το προφίλ εμφανίζεται/ενημερώνεται μετά τον υπολογισμό διαδρομής
5. **Τροποποίηση Διαδρομής**: Η μετακίνηση pins ή η προσθήκη νέων ενημερώνει τα πάντα ζωντανά

### 4.2 Οδηγίες Οπτικού Σχεδιασμού
- **Καθαρή Διεπαφή**: Μινιμαλιστικός, διαισθητικός σχεδιασμός
- **Χρωματική Παλέτα**: 
  - Pins χάρτη: Κόκκινο για εκκίνηση, μπλε για waypoints
  - Γραμμή διαδρομής: Σκούρο μπλε ή πράσινο
  - Υψομετρικό προφίλ: Μπλε γραμμή, κόκκινο για απότομα τμήματα
- **Καταστάσεις Φόρτωσης**: Σαφείς δείκτες κατά τη διάρκεια κλήσεων API
- **Χειρισμός Λαθών**: Φιλικά μηνύματα σφάλματος για αποτυχημένα αιτήματα

### 4.3 Προσβασιμότητα
- **Πλοήγηση με Πληκτρολόγιο**: Tab μέσω των χειριστηρίων
- **Υποστήριξη Screen Reader**: Alt text και ARIA labels
- **Φιλικό για Δαλτονικούς**: Διακριτά χρώματα και μοτίβα
- **Υψηλή Αντίθεση**: Επιλογή για λειτουργία υψηλής αντίθεσης

## 5. Προδιαγραφές Υλοποίησης

### 5.1 Δομή Αρχείων
```
/
├── index.html          # Κύριο αρχείο εφαρμογής
├── css/
│   └── styles.css      # Όλο το styling
├── js/
│   ├── app.js         # Κύρια λογική εφαρμογής
│   ├── map.js         # Συναρτήσεις χειρισμού χάρτη  
│   ├── routing.js     # Υπολογισμός διαδρομής
│   └── elevation.js   # Λογική υψομετρικού προφίλ
└── assets/
    └── icons/         # Δείκτες χάρτη και εικονίδια UI
```

### 5.2 Κλειδιά Συναρτήσεις JavaScript για Υλοποίηση
- `initializeMap()` - Ρύθμιση χάρτη με OpenStreetMap
- `addPin(lat, lng)` - Προσθήκη waypoint στον χάρτη και στη διαδρομή
- `calculateRoute()` - Κλήση routing API και ενημέρωση προβολής
- `updateElevationProfile()` - Λήψη δεδομένων υψομέτρου και ενημέρωση γραφήματος
- `clearRoute()` - Επαναφορά όλων των pins και δεδομένων διαδρομής
- `exportRoute()` - Κατέβασμα διαδρομής ως αρχείο

### 5.3 Λεπτομέρειες Ενσωμάτωσης API
- **Περιορισμός Ρυθμού**: Υλοποίηση throttling αιτημάτων για APIs
- **Χειρισμός Λαθών**: Ομαλά fallbacks για αποτυχίες API
- **Caching**: Cache δεδομένων υψομέτρου για μείωση κλήσεων API
- **Χειρισμός Offline**: Προβολή κατάλληλων μηνυμάτων όταν τα APIs δεν είναι διαθέσιμα

## 6. Απαιτήσεις Δοκιμών

### 6.1 Δοκιμές Λειτουργικότητας
- Ακρίβεια τοποθέτησης pins σε διάφορα επίπεδα zoom
- Υπολογισμός διαδρομής με διαφορετικό αριθμό waypoints
- Ακρίβεια υψομετρικού προφίλ και ανίχνευση κλίσης
- Συμβατότητα μεταξύ browsers (Chrome, Firefox, Safari, Edge)

### 6.2 Δοκιμές Απόδοσης
- Load testing με μέγιστο αριθμό pins
- Παρακολούθηση χρήσης μνήμης κατά τη διάρκεια εκτεταμένης χρήσης
- Χειρισμός χρόνου απόκρισης API

### 6.3 Δοκιμές Αποδοχής Χρήστη
- Διαισθητική ροή εργασίας τοποθέτησης pins
- Σαφής ερμηνεία υψομετρικού προφίλ
- Responsive design σε διαφορετικά μεγέθη οθόνης

## 7. Απαιτήσεις Ανάπτυξης

### 7.1 Hosting
- **Static Hosting**: Μπορεί να αναπτυχθεί σε GitHub Pages, Netlify, ή παρόμοια
- **HTTPS Απαιτείται**: Για geolocation και χαρακτηριστικά σύγχρονων browsers
- **Ενσωμάτωση CDN**: Χρήση CDNs για mapping libraries και APIs

### 7.2 Υποστήριξη Browser
- **Σύγχρονοι Browsers**: Chrome 80+, Firefox 75+, Safari 13+, Edge 80+
- **Υποστήριξη Mobile**: iOS Safari, Chrome Mobile (προαιρετικό αλλά προτείνεται)

## 8. Απαιτήσεις Τεκμηρίωσης

### 8.1 Τεκμηρίωση Χρήστη
- **Οδηγός Γρήγορης Εκκίνησης**: Πώς να τοποθετήσετε pins και να διαβάσετε το υψομετρικό προφίλ
- **Επισκόπηση Χαρακτηριστικών**: Όλες οι διαθέσιμες λειτουργίες και χειριστήρια
- **Τμήμα FAQ**: Συχνά προβλήματα και λύσεις

### 8.2 Τεχνική Τεκμηρίωση
- **Τεκμηρίωση API**: Όλα τα εξωτερικά APIs που χρησιμοποιούνται και οι ρυθμίσεις τους
- **Σχόλια Κώδικα**: Σαφή σχολιασμό σε όλο τον κώδικα
- **Οδηγός Ανάπτυξης**: Βήμα προς βήμα οδηγίες ανάπτυξης

## 9. Δυνατότητες Μελλοντικής Βελτίωσης
- **Εξαγωγή Διαδρομής**: Λειτουργία εξαγωγής αρχείου GPX
- **Εισαγωγή Διαδρομής**: Φόρτωση υπαρχόντων αρχείων GPX
- **Πολλαπλοί Τύποι Διαδρομής**: Επιλογές περπατήματος, ποδηλασίας, οδήγησης
- **Ενσωμάτωση Καιρού**: Καιρικές συνθήκες κατά μήκος της διαδρομής
- **Κοινοποίηση**: Κοινοποίηση διαδρομών μέσω URL

## 10. Μετρικές Επιτυχίας
- **Λειτουργική Πληρότητα**: Όλες οι βασικές λειτουργίες να λειτουργούν όπως καθορίζεται
- **Απόδοση**: Πλήρωση όλων των καθορισμένων απαιτήσεων χρόνου απόκρισης
- **Χρηστικότητα**: Διαισθητική διεπαφή που απαιτεί ελάχιστες οδηγίες
- **Αξιοπιστία**: Σταθερή λειτουργία κατά τη διάρκεια εκτεταμένων συνεδριών χρήσης

---

**Σημείωση για Υλοποίηση LLM**: Αυτή η εφαρμογή θα πρέπει να κατασκευαστεί ως ένα μόνο αρχείο HTML με ενσωματωμένα CSS και JavaScript, ή ως απλή δομή αρχείων όπως καθορίζεται παραπάνω. Εστιάστε στη δημιουργία μιας καθαρής, λειτουργικής διεπαφής που λειτουργεί αξιόπιστα με τα καθορισμένα APIs. Δώστε προτεραιότητα στη βασική λειτουργικότητα έναντι προηγμένων χαρακτηριστικών. pin placement workflow
- Clear elevation profile interpretation
- Responsive design on different screen sizes

## 7. Deployment Requirements

### 7.1 Hosting
- **Static Hosting**: Can be deployed on GitHub Pages, Netlify, or similar
- **HTTPS Required**: For geolocation and modern browser features
- **CDN Integration**: Use CDNs for mapping libraries and APIs

### 7.2 Browser Support
- **Modern Browsers**: Chrome 80+, Firefox 75+, Safari 13+, Edge 80+
- **Mobile Support**: iOS Safari, Chrome Mobile (optional but recommended)

## 8. Documentation Requirements

### 8.1 User Documentation
- **Quick Start Guide**: How to place pins and read elevation profile
- **Feature Overview**: All available functions and controls
- **FAQ Section**: Common issues and solutions

### 8.2 Technical Documentation
- **API Documentation**: All external APIs used and their configurations
- **Code Comments**: Clear commenting throughout codebase
- **Deployment Guide**: Step-by-step deployment instructions

## 9. Future Enhancement Possibilities
- **Route Export**: GPX file export functionality
- **Route Import**: Load existing GPX files
- **Multiple Route Types**: Walking, cycling, driving options
- **Weather Integration**: Weather conditions along route
- **Sharing**: Share routes via URL

## 10. Success Metrics
- **Functional Completeness**: All core features working as specified
- **Performance**: Meet all specified response time requirements
- **Usability**: Intuitive interface requiring minimal instructions
- **Reliability**: Stable operation during extended use sessions

---

**Note for LLM Implementation**: This application should be built as a single HTML file with embedded CSS and JavaScript, or as a simple file structure as specified above. Focus on creating a clean, functional interface that works reliably with the specified APIs. Prioritize core functionality over advanced features.